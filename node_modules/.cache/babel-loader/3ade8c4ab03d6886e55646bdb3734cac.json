{"ast":null,"code":"var _jsxFileName = \"/Users/lb/Documents/GitHub/LucileBaudouin_12_31032022/src/components/charts/Average.jsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\n/*\n* * Renders the tooltip (minutes) information when user hovers on the line chart\n* @function CustomTooltip\n* @param { boolean } active: inital value false / becomes true when hover on linechart\n* @param { array } payload: contains data to be displayed on hover\n* @returns { JSX }\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomTooltip = _ref => {\n  let {\n    active,\n    payload\n  } = _ref;\n\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'white',\n        fontSize: 10,\n        fontWeight: 500,\n        textAlign: 'center',\n        padding: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${payload[0].value} min`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n/*\n* Renders Average Sessions Line Chart\n* @function Average\n* @param { Object } average\n* @returns {JSX}\n*/\n\n\n_c = CustomTooltip;\n\nconst Average = _ref2 => {\n  let {\n    average\n  } = _ref2;\n\n  const daysWeekTxt = day => {\n    const days = ['L', 'M', 'M', 'J', 'V', 'S', 'D'];\n    return days[day - 1];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"anaItem average\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Dur\\xE9e moyenne des \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 27\n      }, this), \"sessions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 200,\n        height: 200,\n        data: average.sessions,\n        margin: {\n          top: 0,\n          right: 10,\n          bottom: 0,\n          left: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"sessionLength\",\n          dot: false,\n          activeDot: {\n            r: 5,\n            strokeOpacity: 0.2,\n            strokeWidth: 10\n          },\n          stroke: \"rgba(255, 255, 255, 0.5)\",\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"day\",\n          axisLine: false,\n          mirror: true,\n          padding: {\n            left: 10,\n            right: 10\n          },\n          stroke: \"rgba(255, 255, 255, 0.5)\",\n          style: {\n            fontSize: 12,\n            fontWeight: 500\n          },\n          tickLine: false,\n          tickMargin: 15,\n          tickFormatter: daysWeekTxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          axisLine: false,\n          domain: ['dataMin - 20', 'dataMax + 40'],\n          mirror: true,\n          tickCount: 0,\n          tickLine: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: CustomTooltip,\n          cursor: {\n            stroke: 'black',\n            strokeOpacity: 0.2,\n            strokeWidth: 40\n          },\n          offset: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Average;\nexport default Average;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"Average\");","map":{"version":3,"sources":["/Users/lb/Documents/GitHub/LucileBaudouin_12_31032022/src/components/charts/Average.jsx"],"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","CustomTooltip","active","payload","length","background","fontSize","fontWeight","textAlign","padding","value","Average","average","daysWeekTxt","day","days","sessions","top","right","bottom","left","r","strokeOpacity","strokeWidth","stroke"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    Tooltip,\n    ResponsiveContainer,\n  } from 'recharts';\n\n/*\n* * Renders the tooltip (minutes) information when user hovers on the line chart\n* @function CustomTooltip\n* @param { boolean } active: inital value false / becomes true when hover on linechart\n* @param { array } payload: contains data to be displayed on hover\n* @returns { JSX }\n*/\nconst CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n        return (\n            <div\n        style={{\n          background: 'white',\n          fontSize: 10,\n          fontWeight: 500,\n          textAlign: 'center',\n          padding: 10,\n        }}\n      >\n        <p>{`${payload[0].value} min`}</p>\n      </div>\n        );\n    }\n    return null;\n}\n\n/*\n* Renders Average Sessions Line Chart\n* @function Average\n* @param { Object } average\n* @returns {JSX}\n*/\nconst Average = ({ average }) => {\n    const daysWeekTxt = (day) => {\n        const days = ['L', 'M', 'M', 'J', 'V', 'S', 'D'];\n        return days[day -1];\n    };\n    return (\n        <div className=\"anaItem average\">\n      <h3>\n        DurÃ©e moyenne des <br />\n        sessions\n      </h3>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={200}\n          height={200}\n          data={average.sessions}\n          margin={{ top: 0, right: 10, bottom: 0, left: 10 }}\n        >\n          <Line\n            type=\"monotone\"\n            dataKey=\"sessionLength\"\n            dot={false}\n            activeDot={{ r: 5, strokeOpacity: 0.2, strokeWidth: 10 }}\n            stroke=\"rgba(255, 255, 255, 0.5)\"\n            strokeWidth={2}\n          />\n          <XAxis\n            dataKey=\"day\"\n            axisLine={false}\n            mirror={true}\n            padding={{ left: 10, right: 10 }}\n            stroke=\"rgba(255, 255, 255, 0.5)\"\n            style={{ fontSize: 12, fontWeight: 500 }}\n            tickLine={false}\n            tickMargin={15}\n            tickFormatter={daysWeekTxt}\n          />\n          <YAxis\n            axisLine={false}\n            domain={['dataMin - 20', 'dataMax + 40']}\n            mirror={true}\n            tickCount={0}\n            tickLine={false}\n          />\n          <Tooltip\n            content={CustomTooltip}\n            cursor={{ stroke: 'black', strokeOpacity: 0.2, strokeWidth: 40 }}\n            offset={30}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n    );\n};\n\nexport default Average;"]},"metadata":{},"sourceType":"module"}