{"ast":null,"code":"var _jsxFileName = \"/Users/lb/Documents/GitHub/LucileBaudouin_12_31032022/src/components/layout/Aside.jsx\";\nimport React from 'react';\nimport Analytics from '../Analytics';\n/**\n * Renders info showing health data (calories, carbs, lipids & prots)\n * @function Aside\n * @param { Object } userData\n * @returns { JSX }\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Aside = _ref => {\n  let {\n    countData\n  } = _ref;\n\n  if (!countData) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"analyticsRight\",\n    children: [/*#__PURE__*/_jsxDEV(Analytics, {\n      compoId: \"calo\",\n      iconSrc: fireIcon,\n      iconAlt: \"calories\",\n      compoValue: `${new Intl.NumberFormat('en-IN', {\n        maximumSignificantDigits: 3\n      }).format(countData.calorieCount)}kCal`,\n      compoType: \"Calories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Analytics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Analytics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Analytics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Aside;\nexport default Aside;\n\nvar _c;\n\n$RefreshReg$(_c, \"Aside\");","map":{"version":3,"sources":["/Users/lb/Documents/GitHub/LucileBaudouin_12_31032022/src/components/layout/Aside.jsx"],"names":["React","Analytics","Aside","countData","fireIcon","Intl","NumberFormat","maximumSignificantDigits","format","calorieCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,KAAK,GAAG,QAAmB;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;;AAC7B,MAAI,CAACA,SAAL,EAAgB;AACZ,WAAO,IAAP;AACH;;AACD,sBACI;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAA,4BACI,QAAC,SAAD;AACI,MAAA,OAAO,EAAC,MADZ;AAEI,MAAA,OAAO,EAAEC,QAFb;AAGI,MAAA,OAAO,EAAC,UAHZ;AAII,MAAA,UAAU,EAAG,GAAE,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC1CC,QAAAA,wBAAwB,EAAG;AADe,OAA/B,EAEZC,MAFY,CAELL,SAAS,CAACM,YAFL,CAEmB,MANtC;AAOI,MAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApBD;;KAAMP,K;AAsBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nimport Analytics from '../Analytics';\n\n/**\n * Renders info showing health data (calories, carbs, lipids & prots)\n * @function Aside\n * @param { Object } userData\n * @returns { JSX }\n */\n\nconst Aside = ( {countData }) => {\n    if (!countData) {\n        return null;\n    }\n    return (\n        <aside className=\"analyticsRight\">\n            <Analytics \n                compoId=\"calo\"\n                iconSrc={fireIcon}\n                iconAlt=\"calories\"\n                compoValue={`${new Intl.NumberFormat('en-IN', {\n                    maximumSignificantDigits : 3,\n                }).format(countData.calorieCount)}kCal`}\n                compoType=\"Calories\"\n            />\n            <Analytics />\n            <Analytics />\n            <Analytics />\n        </aside>\n    );\n};\n\nexport default Aside;"]},"metadata":{},"sourceType":"module"}