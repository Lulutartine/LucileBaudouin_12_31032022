{"ast":null,"code":"var _jsxFileName = \"/Users/lb/Documents/GitHub/LucileBaudouin_12_31032022/src/components/charts/Activity.jsx\";\nimport React from 'react';\n/*\n* Renders the tooltip (kg/kCal) information when user hovers on barchart\n* @function CustomTooltip\n* @param { boolean } active: inital value false / becomes true when hover on barchart\n* @param { array } payload: contains data to be displayed on hover\n* @returns { JSX }\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomTooltip = _ref => {\n  let {\n    active,\n    payload\n  } = _ref;\n\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        background: '#ff0101',\n        height: 45,\n        color: 'white',\n        fontSize: 12,\n        textAlign: 'center',\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${payload[0].value} kg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${payload[1].value} kCal`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this);\n  }\n\n  ;\n  return null;\n};\n/*\n* Renders Activities BarChart with Weight & Calories burned\n* @function Activity\n* @param { Object } activity\n* @returns { JSX }\n*/\n\n\n_c = CustomTooltip;\n\nconst Activity = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Activity;\nexport default Activity;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"Activity\");","map":{"version":3,"sources":["/Users/lb/Documents/GitHub/LucileBaudouin_12_31032022/src/components/charts/Activity.jsx"],"names":["React","CustomTooltip","active","payload","length","display","flexDirection","justifyContent","background","height","color","fontSize","textAlign","padding","value","Activity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,aAAa,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAwB;;AAC3C,MAAID,MAAM,IAAIC,OAAV,IAAqBA,OAAO,CAACC,MAAjC,EAAyC;AACzC,wBACI;AACA,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,QAFV;AAGLC,QAAAA,cAAc,EAAE,eAHX;AAILC,QAAAA,UAAU,EAAE,SAJP;AAKLC,QAAAA,MAAM,EAAE,EALH;AAMLC,QAAAA,KAAK,EAAE,OANF;AAOLC,QAAAA,QAAQ,EAAE,EAPL;AAQLC,QAAAA,SAAS,EAAE,QARN;AASLC,QAAAA,OAAO,EAAE;AATJ,OADP;AAAA,8BAaA;AAAA,kBAAK,GAAEV,OAAO,CAAC,CAAD,CAAP,CAAWW,KAAM;AAAxB;AAAA;AAAA;AAAA;AAAA,cAbA,eAcA;AAAA,kBAAK,GAAEX,OAAO,CAAC,CAAD,CAAP,CAAWW,KAAM;AAAxB;AAAA;AAAA;AAAA;AAAA,cAdA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBC;;AAAA;AAED,SAAO,IAAP;AACH,CAvBD;AAyBA;AACA;AACA;AACA;AACA;AACA;;;KA9BMb,a;;AA+BN,MAAMc,QAAQ,GAAG,MAAM;AACnB,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMA,Q;AAQN,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\n/*\n* Renders the tooltip (kg/kCal) information when user hovers on barchart\n* @function CustomTooltip\n* @param { boolean } active: inital value false / becomes true when hover on barchart\n* @param { array } payload: contains data to be displayed on hover\n* @returns { JSX }\n*/\nconst CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n    return (\n        <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          background: '#ff0101',\n          height: 45,\n          color: 'white',\n          fontSize: 12,\n          textAlign: 'center',\n          padding: 10,\n        }}\n      >\n        <p>{`${payload[0].value} kg`}</p>\n        <p>{`${payload[1].value} kCal`}</p>     \n        </div>\n    );\n    };\n\n    return null;\n};\n\n/*\n* Renders Activities BarChart with Weight & Calories burned\n* @function Activity\n* @param { Object } activity\n* @returns { JSX }\n*/\nconst Activity = () => {\n    return (\n        <div>\n            \n        </div>\n    );\n};\n\nexport default Activity;"]},"metadata":{},"sourceType":"module"}