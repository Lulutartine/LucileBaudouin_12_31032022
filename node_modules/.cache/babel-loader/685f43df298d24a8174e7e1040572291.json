{"ast":null,"code":"var _jsxFileName = \"/Users/lb/Documents/GitHub/LucileBaudouin_12_31032022/src/components/charts/Average.jsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\n/*\n* * Renders the tooltip (minutes) information when user hovers on the line chart\n* @function CustomTooltip\n* @param { boolean } active: inital value false / becomes true when hover on linechart\n* @param { array } payload: contains data to be displayed on hover\n* @returns { JSX }\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomTooltip = _ref => {\n  let {\n    active,\n    payload\n  } = _ref;\n\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'white',\n        fontSize: 10,\n        fontWeight: 500,\n        textAlign: 'center',\n        padding: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${payload[0].value} min`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_c = CustomTooltip;\n\nconst Average = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Average;\nexport default Average;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"Average\");","map":{"version":3,"sources":["/Users/lb/Documents/GitHub/LucileBaudouin_12_31032022/src/components/charts/Average.jsx"],"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","CustomTooltip","active","payload","length","background","fontSize","fontWeight","textAlign","padding","value","Average"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,SADJ,EAEIC,IAFJ,EAGIC,KAHJ,EAIIC,KAJJ,EAKIC,OALJ,EAMIC,mBANJ,QAOS,UAPT;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,aAAa,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAwB;;AAC3C,MAAID,MAAM,IAAIC,OAAV,IAAqBA,OAAO,CAACC,MAAjC,EAAyC;AACrC,wBACI;AACJ,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,OADP;AAELC,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,UAAU,EAAE,GAHP;AAILC,QAAAA,SAAS,EAAE,QAJN;AAKLC,QAAAA,OAAO,EAAE;AALJ,OADH;AAAA,6BASJ;AAAA,kBAAK,GAAEN,OAAO,CAAC,CAAD,CAAP,CAAWO,KAAM;AAAxB;AAAA;AAAA;AAAA;AAAA;AATI;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AACD,SAAO,IAAP;AACH,CAjBD;;KAAMT,a;;AAmBN,MAAMU,OAAO,GAAG,MAAM;AAClB,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;MAAMA,O;AAQN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    Tooltip,\n    ResponsiveContainer,\n  } from 'recharts';\n\n/*\n* * Renders the tooltip (minutes) information when user hovers on the line chart\n* @function CustomTooltip\n* @param { boolean } active: inital value false / becomes true when hover on linechart\n* @param { array } payload: contains data to be displayed on hover\n* @returns { JSX }\n*/\n\nconst CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n        return (\n            <div\n        style={{\n          background: 'white',\n          fontSize: 10,\n          fontWeight: 500,\n          textAlign: 'center',\n          padding: 10,\n        }}\n      >\n        <p>{`${payload[0].value} min`}</p>\n      </div>\n        );\n    }\n    return null;\n}\n\nconst Average = () => {\n    return (\n        <div>\n            \n        </div>\n    );\n};\n\nexport default Average;"]},"metadata":{},"sourceType":"module"}